// This is your Prisma schema file for the shared database
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../.prisma/shared"
}

datasource db {
  provider = "postgresql"
  url      = env("SHARED_DATABASE_URL")
}

// Tenant model to store information about each tenant
model Tenant {
  id            String         @id @default(cuid())
  name          String
  subdomain     String         @unique
  description   String?
  logo          String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isActive      Boolean        @default(true)
  theme         Json? // Stores tenant-specific theme settings
  databaseName  String         @unique // Name of the tenant's database
  themeSettings ThemeSettings?
  superAdmin    SuperAdmin?
  admins        Admin[]
  oneUseToken   String?
}

// Super Admin model for system-wide administration
model SuperAdmin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  tenantId  String   @unique
}

// Admin model for tenant-specific administration
model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  tenantId  String
}

// Theme settings for tenant-specific color schemes
model ThemeSettings {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  tenantId  String   @unique

  // Primary colors
  primary100 String
  primary200 String
  primary300 String
  primary400 String
  primary500 String
  primary600 String
  primary700 String
  primary800 String
  primary900 String

  // Secondary colors
  secondary100 String
  secondary200 String
  secondary300 String
  secondary400 String
  secondary500 String
  secondary600 String
  secondary700 String
  secondary800 String
  secondary900 String

  // Tertiary colors
  tertiary100 String
  tertiary200 String
  tertiary300 String
  tertiary400 String
  tertiary500 String
  tertiary600 String
  tertiary700 String
  tertiary800 String
  tertiary900 String

  // Neutral colors
  neutral100 String
  neutral200 String
  neutral300 String
  neutral400 String
  neutral500 String
  neutral600 String
  neutral700 String
  neutral800 String
  neutral900 String

  // Background colors
  background100 String
  background200 String
  background300 String
  background400 String

  // Status colors
  success100 String
  success200 String
  success300 String
  success400 String
  success500 String
  success600 String
  success700 String
  success800 String
  success900 String

  warning100 String
  warning200 String
  warning300 String
  warning400 String
  warning500 String
  warning600 String
  warning700 String
  warning800 String
  warning900 String

  error100 String
  error200 String
  error300 String
  error400 String
  error500 String
  error600 String
  error700 String
  error800 String
  error900 String
}
